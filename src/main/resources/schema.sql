
CREATE TABLE IF NOT EXISTS RATING_MPA (
	RATING_MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	RATING_MPA_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT CONSTRAINT_9 PRIMARY KEY (RATING_MPA_ID)
);

CREATE TABLE IF NOT EXISTS FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER VARYING NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_MPA_ID INTEGER NOT NULL,
	CONSTRAINT CONSTRAINT_3 PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_FK FOREIGN KEY (RATING_MPA_ID) REFERENCES RATING_MPA(RATING_MPA_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_21 ON FILMS (FILM_ID);


CREATE TABLE IF NOT EXISTS GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	GENRE_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT CONSTRAINT_40 PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_40 ON GENRE (GENRE_ID);

CREATE TABLE IF NOT EXISTS FILMS_TO_GENRES (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_TO_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT FILMS_TO_GENRES_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES GENRE(GENRE_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_9 ON RATING_MPA (RATING_MPA_ID);

CREATE TABLE IF NOT EXISTS USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING NOT NULL,
	LOGIN CHARACTER VARYING NOT NULL,
	NAME CHARACTER VARYING,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT CONSTRAINT_4 PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_4 ON USERS (USER_ID);

CREATE TABLE IF NOT EXISTS LIKED_FILMS (
	USER_ID INTEGER,
	FILM_ID INTEGER,
	CONSTRAINT LIKED_FILMS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT LIKED_FILMS_FK_1 FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);



CREATE TABLE IF NOT EXISTS FRIENDSHIP_STATUS (
	FRIENDSHIP_STATUS_ID INTEGER NOT NULL AUTO_INCREMENT,
	FRIENDSHIP_STATUS_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT CONSTRAINT_7 PRIMARY KEY (FRIENDSHIP_STATUS_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_7 ON FRIENDSHIP_STATUS (FRIENDSHIP_STATUS_ID);

CREATE TABLE IF NOT EXISTS FRIENDS_LIST (
	USER_ID INTEGER,
	FRIEND_ID INTEGER,
	FRIENDSHIP_STATUS_ID INTEGER,
	CONSTRAINT FRIENDS_LIST_FK FOREIGN KEY (FRIENDSHIP_STATUS_ID) REFERENCES FRIENDSHIP_STATUS(FRIENDSHIP_STATUS_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT FRIENDS_LIST_FK_1 FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
    CONSTRAINT FRIENDS_LIST_FK_2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

